// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_issues_viewer/test/mocks/services_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter/material.dart' as _i1;
import 'package:flutter_issues_viewer/core/base/base_net_response/base_net_response.dart'
    as _i3;
import 'package:flutter_issues_viewer/core/services/local_storage_service/i_local_storage_service.dart'
    as _i6;
import 'package:flutter_issues_viewer/core/services/navigation_service/navigation_service.dart'
    as _i4;
import 'package:flutter_issues_viewer/core/services/shared_preferences_service/i_shared_preferences_service.dart'
    as _i11;
import 'package:flutter_issues_viewer/modules/issuess/data/models/issue_contracts.dart'
    as _i9;
import 'package:flutter_issues_viewer/modules/issuess/data/services/issue_network_service/i_issues_network_service.dart'
    as _i7;
import 'package:flutter_issues_viewer/modules/issuess/data/services/issue_storage_service/i_issue_storage_service.dart'
    as _i10;
import 'package:flutter_issues_viewer/modules/issuess/domain/entities/issue/issue.dart'
    as _i8;
import 'package:mockito/mockito.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGlobalKey_0<T extends _i1.State<_i1.StatefulWidget>>
    extends _i2.SmartFake implements _i1.GlobalKey<T> {
  _FakeGlobalKey_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseNetResponse_1<Data> extends _i2.SmartFake
    implements _i3.BaseNetResponse<Data> {
  _FakeBaseNetResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i2.Mock implements _i4.NavigationService {
  @override
  _i1.GlobalKey<_i1.NavigatorState> get navigatorKey => (super.noSuchMethod(
        Invocation.getter(#navigatorKey),
        returnValue: _FakeGlobalKey_0<_i1.NavigatorState>(
          this,
          Invocation.getter(#navigatorKey),
        ),
        returnValueForMissingStub: _FakeGlobalKey_0<_i1.NavigatorState>(
          this,
          Invocation.getter(#navigatorKey),
        ),
      ) as _i1.GlobalKey<_i1.NavigatorState>);

  @override
  set navigatorKey(_i1.GlobalKey<_i1.NavigatorState>? _navigatorKey) =>
      super.noSuchMethod(
        Invocation.setter(
          #navigatorKey,
          _navigatorKey,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<dynamic> goTo(
    String? routeName, {
    dynamic arguments,
    bool? logRoute = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #goTo,
          [routeName],
          {
            #arguments: arguments,
            #logRoute: logRoute,
          },
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  void goBack([dynamic arguments]) => super.noSuchMethod(
        Invocation.method(
          #goBack,
          [arguments],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> loaderScreen({required bool? show}) => (super.noSuchMethod(
        Invocation.method(
          #loaderScreen,
          [],
          {#show: show},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [ILocalStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockILocalStorageService extends _i2.Mock
    implements _i6.ILocalStorageService {
  @override
  bool isDarkTheme() => (super.noSuchMethod(
        Invocation.method(
          #isDarkTheme,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i5.Future<bool> setDarkTheme({required bool? isDarkTheme}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDarkTheme,
          [],
          {#isDarkTheme: isDarkTheme},
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [IIssuesNetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIIssuesNetworkService extends _i2.Mock
    implements _i7.IIssuesNetworkService {
  @override
  _i5.Future<_i3.BaseNetResponse<List<_i8.Issue>>> issues({
    bool? isPaginated = true,
    int? pageNumber = 1,
    _i9.IssuesFilterBy? filterBy,
    _i9.IssuesSortBy? sortBy,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #issues,
          [],
          {
            #isPaginated: isPaginated,
            #pageNumber: pageNumber,
            #filterBy: filterBy,
            #sortBy: sortBy,
          },
        ),
        returnValue: _i5.Future<_i3.BaseNetResponse<List<_i8.Issue>>>.value(
            _FakeBaseNetResponse_1<List<_i8.Issue>>(
          this,
          Invocation.method(
            #issues,
            [],
            {
              #isPaginated: isPaginated,
              #pageNumber: pageNumber,
              #filterBy: filterBy,
              #sortBy: sortBy,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.BaseNetResponse<List<_i8.Issue>>>.value(
                _FakeBaseNetResponse_1<List<_i8.Issue>>(
          this,
          Invocation.method(
            #issues,
            [],
            {
              #isPaginated: isPaginated,
              #pageNumber: pageNumber,
              #filterBy: filterBy,
              #sortBy: sortBy,
            },
          ),
        )),
      ) as _i5.Future<_i3.BaseNetResponse<List<_i8.Issue>>>);
}

/// A class which mocks [IIssueStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIIssueStorageService extends _i2.Mock
    implements _i10.IIssueStorageService {
  @override
  List<String> getViewedIssues() => (super.noSuchMethod(
        Invocation.method(
          #getViewedIssues,
          [],
        ),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  _i5.Future<bool> setViewedIssues(List<String>? issueIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #setViewedIssues,
          [issueIds],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [ISharedPreferencesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockISharedPreferencesService extends _i2.Mock
    implements _i11.ISharedPreferencesService {
  @override
  _i5.Future<bool> setStringList({
    required String? key,
    required List<String>? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  List<String>? getStringList(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getStringList,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as List<String>?);

  @override
  bool? getBool(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as bool?);

  @override
  _i5.Future<bool> setBool({
    required String? key,
    required bool? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
